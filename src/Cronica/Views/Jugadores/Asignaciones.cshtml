@model Asignacion

@{
    ViewData["Title"] = "Mis Tramas";
}

<h2>Tramas Activas</h2>

<form asp-action="Asignaciones">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="AsignacionId" />
    <input type="hidden" asp-for="PersonajeId" />
    <input type="hidden" asp-for="PasaTramaId" />

    <table class="table">
        <thead>
            <tr>
                <th>Trama</th>
                <th>Jugador</th>
                @{
                    foreach (var seguidor in Model.Personaje.Seguidores)
                    {
                        <th>@seguidor.TrasfondoRelacionado.Nombre<br />(@seguidor.TipoRelacion)</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                PersonajeAsignacion asignacion;
                int id;
                foreach (var tramaParticipada in Model.Personaje.TramasParticipadas)
                {
                    <tr>
                        <td>@tramaParticipada.Trama.Nombre</td>
                        <td>
                            @{
                                asignacion = Model.Asignaciones.Where(a => a.PersonajeId == Model.PersonajeId && a.TramaId == tramaParticipada.TramaId).FirstOrDefault();
                                id = Model.Asignaciones.IndexOf(asignacion);
                                <input type="hidden" asp-for="@Model.Asignaciones[@id].PersonajeAsignacionId" />
                                <input type="hidden" asp-for="@Model.Asignaciones[@id].PersonajeId" />
                                <input type="hidden" asp-for="@Model.Asignaciones[@id].TramaId" />
                                <input type="hidden" id="Asignaciones_@id.ToString()__PuntosParticipacion" name="Asignaciones[@id].PuntosParticipacion" value="@asignacion.PuntosParticipacion" />
                                <div id="Asignaciones_@id.ToString()__PuntosParticipacion" name="Asignaciones[@id].PuntosParticipacion" class="slider slider_@Model.PersonajeId.ToString()">
                                    @asignacion.PuntosParticipacion
                                </div>
                            }
                        </td>
                        @foreach (var seguidor in Model.Personaje.Seguidores)
                        {
                            asignacion = Model.Asignaciones.Where(a => a.PersonajeId == seguidor.TrasfondoRelacionadoId && a.TramaId == tramaParticipada.TramaId).FirstOrDefault();
                            id = Model.Asignaciones.IndexOf(asignacion);
                            <td>
                                <input type="hidden" asp-for="@Model.Asignaciones[@id].PersonajeAsignacionId" />
                                <input type="hidden" asp-for="@Model.Asignaciones[@id].PersonajeId" />
                                <input type="hidden" asp-for="@Model.Asignaciones[@id].TramaId" />
                                <input type="hidden" id="Asignaciones_@id.ToString()__PuntosParticipacion" name="Asignaciones[@id].PuntosParticipacion" value="@asignacion.PuntosParticipacion" />
                                <div id="Asignaciones_@id.ToString()__PuntosParticipacion" name="Asignaciones[@id].PuntosParticipacion" class="slider slider_@seguidor.TrasfondoRelacionadoId.ToString()">
                                    @asignacion.PuntosParticipacion
                                </div>
                            </td>
                        }
                    </tr>
                                }
            }
        </tbody>
    </table>
    <input type="submit" value="Guardar" class="btn btn-default btn-success" />
</form>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" charset="utf8">
        $('.table').DataTable({
            "paging": false,
            "ordering": false,
            "searching": false
        });
    </script>
    <script>
        function ManejarRangos(sliders, puntuacionDisponibleTotal) {
            sliders.each(function () {
                var init_value = parseInt($(this).text());

                $(this).empty().slider({
                    value: init_value,
                    min: 0,
                    max: puntuacionDisponibleTotal,
                    range: "max",
                    step: 1,
                    animate: 0,
                    slide: function (event, ui) {

                        // Get current total
                        var total = 0;

                        sliders.not(this).each(function () {
                            total += $(this).slider("option", "value");
                        });

                        // Need to do this because apparently jQ UI
                        // does not update value until this event completes
                        total += ui.value;
                        document.getElementById(this.id).value = parseInt(ui.value);

                        var delta = puntuacionDisponibleTotal - total;

                        // Update each slider
                        sliders.not(this).each(function () {
                            var t = $(this),
                                value = t.slider("option", "value");

                            var new_value = value + (delta / 2);

                            if (new_value < 0 || ui.value == puntuacionDisponibleTotal)
                                new_value = 0;
                            if (new_value > puntuacionDisponibleTotal)
                                new_value = puntuacionDisponibleTotal;

                            t.slider('value', new_value);
                            document.getElementById(t[0].id).value = parseInt(new_value);
                        });
                    }
                });
            });

        }
    </script>
    <script>
        $(document).ready(function () {
            var puntuacionDisponibleTotal = 100;
            var sliders = $(".slider_@Model.PersonajeId.ToString()");
            ManejarRangos(sliders, puntuacionDisponibleTotal);
            @foreach (var seguidor in Model.Personaje.Seguidores)
            {
                @:sliders = $(".slider_@seguidor.TrasfondoRelacionadoId.ToString()");
                @:ManejarRangos(sliders, puntuacionDisponibleTotal);
            }
        });
    </script>
}
